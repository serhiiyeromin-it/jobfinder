name: Docker CI

on:
  push:
    branches: [main]
  workflow_dispatch: {}

env:
  MONGO_URI: ${{ secrets.MONGO_URI }}
  BAA_API_KEY: ${{ secrets.BAA_API_KEY }}
  dockerhub_username: ${{ secrets.dockerhub_username }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.dockerhub_token }}" | docker login -u "${{ secrets.dockerhub_username }}" --password-stdin

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.dockerhub_username }}/nightcrawler-backend:latest ./backend
          docker push ${{ secrets.dockerhub_username }}/nightcrawler-backend:latest

      - name: Build and push frontend image
        run: |
          echo "VITE_API_URL=${{ secrets.FRONTEND_API_URL }}" > frontend/.env.production
          
          docker build -t ${{ secrets.dockerhub_username }}/nightcrawler-frontend:latest ./frontend
          docker push ${{ secrets.dockerhub_username }}/nightcrawler-frontend:latest
          
      - name: Install Python dependencies
        run: pip install -r backend/requirements.txt

      - name: Create CI compose override (dummy logstash)
        run: |
          cat > docker-compose.ci.yml <<'YAML'
          services:
            logstash:
              image: alpine:3.20
              container_name: logstash
              # Leichter TCP-Sink auf 5000, damit SocketHandler was zum Verbinden hat
              command: sh -c "apk add --no-cache busybox-extras >/dev/null 2>&1 && nc -lk -p 5000 >/dev/null"
              expose:
                - "5000"
          YAML

      - name: Run containers for smoke tests
        run: |
          docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d
          echo "Waiting for services..."
          # Warten mit Backoff statt fixer 10s
          for i in {1..20}; do
            if curl -fsS http://localhost:3050/health >/dev/null; then break; fi
            sleep 5
          done
          curl --fail http://localhost:3050/health || (echo "❌ Backend failed!" && docker compose logs backend && exit 1)
          curl --fail http://localhost:5173 || (echo "❌ Frontend failed!" && docker compose logs frontend && exit 1)

      - name: Clean up
        if: always()
        run: docker compose down -v
